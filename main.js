!function(){"use strict";function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e(t)}function t(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,n(o.key),o)}}function n(t){var n=function(t){if("object"!=e(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!=e(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==e(n)?n:n+""}var r=function(){return e=function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._selector=t,this._popupElement=document.querySelector(this._selector),this._closeButton=this._popupElement.querySelector(".popup__container-close-button")},(n=[{key:"open",value:function(){this._popupElement.classList.add("popup__opened")}},{key:"close",value:function(){this._popupElement.classList.remove("popup__opened")}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this._popupElement.classList.remove("popup__opened")}},{key:"setEventListeners",value:function(){var e=this;this._closeButton.addEventListener("click",(function(){e.close()})),document.addEventListener("keydown",(function(t){e._handleEscClose(t)}))}}])&&t(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,n}();function o(e){return o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},o(e)}function i(e,t,n){return t=c(t),function(e,t){if(t&&("object"==o(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,u()?Reflect.construct(t,n||[],c(e).constructor):t.apply(e,n))}function u(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(u=function(){return!!e})()}function c(e){return c=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},c(e)}function a(e,t){return a=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},a(e,t)}var l=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),i(this,t,[e])}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&a(e,t)}(t,e),n=t,Object.defineProperty(n,"prototype",{writable:!1}),n;var n}(r);function s(e){return s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},s(e)}function f(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,p(r.key),r)}}function p(e){var t=function(e){if("object"!=s(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=s(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==s(t)?t:t+""}var y=function(){return e=function e(t,n,r,o,i,u,c,a){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._item=t,this._title=n,this._imageLink=r,this._likesQuantity=o,this._selector=i,this._handleCardClick=u,this._handleLikeQuantity=c,this._handleCardDelete=a},(t=[{key:"_getTemplate",value:function(){return document.querySelector(this._selector).content.querySelector(".element").cloneNode(!0)}},{key:"setLikesQuantity",value:function(e){this._likesQuantity=e,this._element.querySelector(".element__likes-quantity").textContent=this._likesQuantity}},{key:"handleLike",value:function(e){var t=e.target.classList.contains("inactive-icon"),n=e.target.classList.contains("active-icon");return t?(e.target.style.display="none",e.target.nextElementSibling.style.display="inline",!0):n?(e.target.style.display="none",e.target.previousElementSibling.style.display="inline",!1):void 0}},{key:"_closePopupImage",value:function(e){var t=document.querySelector("#image-popup");"Escape"!==e.key&&"click"!==e.type||t.classList.remove("popup__opened")}},{key:"trashCan",value:function(e,t){e!==t&&this._element.querySelector(".trash-can-icon").classList.add("dark-icon")}},{key:"_setEventListeners",value:function(){var e=this;this._element.querySelector(".element__image").addEventListener("click",this._handleCardClick),document.querySelector("#image-close-button").addEventListener("click",(function(t){e._closePopupImage(t)})),document.addEventListener("keydown",(function(t){e._closePopupImage(t)})),this._element.querySelector(".inactive-icon").addEventListener("click",(function(t){return e._handleLikeQuantity(t)})),this._element.querySelector(".active-icon").addEventListener("click",(function(t){return e._handleLikeQuantity(t)}));var t=new l("#confirmation-popup"),n=document.querySelector("#confirmation-button");this._element.querySelector(".trash-can-icon").addEventListener("click",(function(){t.open(),n.addEventListener("click",(function(){"61deba0ec5525e755b8d1397"===e._item.owner._id&&(e._handleCardDelete(e._item._id),e._element.remove(),t.close())}))})),t.setEventListeners()}},{key:"generateCard",value:function(){var e,t=this,n=document.querySelector(".elements");this._element=this._getTemplate(),this._setEventListeners(),this._element.querySelector(".element__image").src=this._imageLink,this._element.querySelector(".element__image").alt=this._title,this._element.querySelector(".element__title").textContent=this._title,this._element.querySelector(".element__likes-quantity").textContent=this._likesQuantity;var r=this._element.querySelector(".active-icon"),o=this._element.querySelector(".inactive-icon");(null===(e=this._item.likes)||void 0===e?void 0:e.some((function(e){return e._id===t._item.owner._id})))&&(r.classList.remove("dark-icon"),o.classList.add("dark-icon")),n.prepend(this._element)}}])&&f(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function m(e){return m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},m(e)}function v(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,d(r.key),r)}}function d(e){var t=function(e){if("object"!=m(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=m(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==m(t)?t:t+""}function b(e,t,n){return t=S(t),function(e,t){if(t&&("object"==m(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,h()?Reflect.construct(t,n||[],S(e).constructor):t.apply(e,n))}function h(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(h=function(){return!!e})()}function _(){return _="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!{}.hasOwnProperty.call(e,t)&&null!==(e=S(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},_.apply(null,arguments)}function S(e){return S=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},S(e)}function g(e,t){return g=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},g(e,t)}var k=function(e){function t(e,n,r){var o;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(o=b(this,t,[r]))._titleElement=e,o._imageElement=n,o}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&g(e,t)}(t,e),n=t,r=[{key:"open",value:function(e,n){var r,o,i;(r=t,o=this,i=_(S(1&3?r.prototype:r),"open",o),function(e){return i.apply(o,e)})([]),this._imageElement.src=n,this._titleElement.textContent=e}}],r&&v(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,r}(r);function E(e){return E="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},E(e)}function w(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,j(r.key),r)}}function j(e){var t=function(e){if("object"!=E(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=E(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==E(t)?t:t+""}function L(e,t,n){return t=q(t),function(e,t){if(t&&("object"==E(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,P()?Reflect.construct(t,n||[],q(e).constructor):t.apply(e,n))}function P(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(P=function(){return!!e})()}function O(e,t,n,r){var o=C(q(1&r?e.prototype:e),t,n);return 2&r?function(e){return o.apply(n,e)}:o}function C(){return C="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!{}.hasOwnProperty.call(e,t)&&null!==(e=q(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},C.apply(null,arguments)}function q(e){return q=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},q(e)}function T(e,t){return T=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},T(e,t)}var I=function(e){function t(e,n,r){var o;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(o=L(this,t,[n]))._submitForm=e,o._submitButton=o._popupElement.querySelector(r),o._buttonMessage=o._submitButton.textContent,o._isLoading=!1,o}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&T(e,t)}(t,e),n=t,(r=[{key:"_getInputValues",value:function(){var e=document.querySelector(this._selector).children[0][1],t=document.querySelector(this._selector).children[0][2];return[e.value,t.value]}},{key:"setLoading",value:function(){this._isLoading=!this._isLoading,this._isLoading?this._submitButton.textContent="Salvando...":this._submitButton.textContent=this._buttonMessage}},{key:"setEventListeners",value:function(){this._popupElement.addEventListener("submit",this._submitForm),O(t,"setEventListeners",this,3)([])}},{key:"close",value:function(){O(t,"close",this,3)([]);var e=document.querySelector(this._selector).children[0][1],n=document.querySelector(this._selector).children[0][2];e.value=this._getInputValues()[0],n.value=this._getInputValues()[1]}}])&&w(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,r}(r);function R(e){return R="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},R(e)}function U(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,B(r.key),r)}}function B(e){var t=function(e){if("object"!=R(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=R(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==R(t)?t:t+""}var x=function(){return e=function e(t){var n=t.nameSelector,r=t.aboutSelector,o=t.avatarSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._nameElement=document.querySelector(n),this._aboutElement=document.querySelector(r),this._avatarElement=document.querySelector(o)},(t=[{key:"getUserInfo",value:function(){return{userName:this._nameElement.textContent,userAbout:this._aboutElement.textContent}}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.about;this._nameElement.textContent=t,this._aboutElement.textContent=n}},{key:"getAvatar",value:function(){return this._avatarElement.src}},{key:"setAvatar",value:function(e){this._avatarElement.src=e}}])&&U(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function D(e){return D="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},D(e)}function A(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,Q(r.key),r)}}function Q(e){var t=function(e){if("object"!=D(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=D(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==D(t)?t:t+""}var V=function(){return e=function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._input=t.input,this._submitButton=t.submitButton,this._inactiveButton=t.inactiveButton,this._inputError=t.inputError,this._errorClass=t.errorClass,this._form=n},(t=[{key:"_showInputError",value:function(e,t,n){var r=e.querySelector(".".concat(t.id,"-error"));t.classList.add("popup__container-input_type-error"),r.textContent=n,r.classList.add("popup__container-error_active")}},{key:"_hideInputError",value:function(e,t){var n=e.querySelector(".".concat(t.id,"-error"));t.classList.remove("popup__container-input_type-error"),n.classList.remove("popup__container-error_active"),n.textContent=""}},{key:"_checkInputValidity",value:function(e,t){t.validity.valid?this._hideInputError(e,t):this._showInputError(e,t,t.validationMessage)}},{key:"_hasInvalidInput",value:function(e){return e.some((function(e){return!e.validity.valid}))}},{key:"_buttonState",value:function(e,t){this._hasInvalidInput(e)?(t.disabled=!0,t.classList.add("popup__container-button_inactive")):(t.disabled=!1,t.classList.remove("popup__container-button_inactive"))}},{key:"_setEventListeners",value:function(e){var t=this,n=Array.from(e.querySelectorAll(".popup__container-input")),r=e.querySelector(".popup__container-button");this._buttonState(n,r),n.forEach((function(o){o.addEventListener("input",(function(){t._checkInputValidity(e,o),t._buttonState(n,r)}))}))}},{key:"enableValidation",value:function(){var e=this._form;this._setEventListeners(e)}}])&&A(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function N(e){return N="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},N(e)}function J(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,M(r.key),r)}}function M(e){var t=function(e){if("object"!=N(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=N(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==N(t)?t:t+""}var F=function(){return e=function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=r,this._renderer=o,this._selector=document.querySelector(n)},(t=[{key:"renderer",value:function(){var e=this;this._items.forEach((function(t){e._renderer(t)}))}},{key:"addItem",value:function(e){this._selector.prepend(e)}}])&&J(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function H(e){return H="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},H(e)}function z(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,G(r.key),r)}}function G(e){var t=function(e){if("object"!=H(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=H(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==H(t)?t:t+""}var K=new(function(){return e=function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseURL=t.baseUrl,this._headers=t.headers},(t=[{key:"getUserInfo",value:function(){return fetch("".concat(this._baseURL,"/users/me"),{headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"editProfile",value:function(e,t){return fetch("".concat(this._baseURL,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:"".concat(e),about:"".concat(t)})}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"getInitialCards",value:function(){return fetch("".concat(this._baseURL,"/cards"),{headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"addCard",value:function(e,t){return fetch("".concat(this._baseURL,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:"".concat(e),link:"".concat(t)})}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"toLike",value:function(e){return fetch("".concat(this._baseURL,"/cards/likes/").concat(e),{method:"PUT",headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"toDislike",value:function(e){return fetch("".concat(this._baseURL,"/cards/likes/").concat(e),{method:"DELETE",headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"deleteCard",value:function(e){return fetch("".concat(this._baseURL,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"updateAvatar",value:function(e){return fetch("".concat(this._baseURL,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:"".concat(e)})}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}}])&&z(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}())({baseUrl:"https://around.nomoreparties.co/v1/web-ptbr-cohort-12",headers:{authorization:"ff7f8eb8-527b-4454-9ba9-18449ff2bb6e","Content-Type":"application/json"}}),W=document.querySelector("#form-create"),X=document.querySelector("#form-edit"),Y=document.querySelector(".popup__image"),Z=document.querySelector(".popup__image-description"),$=document.querySelector(".profile__edit-button"),ee=document.querySelector(".profile__add-button"),te=document.querySelector(".profile__image-container"),ne=document.querySelectorAll(".popup"),re=new x({nameSelector:".profile__name",aboutSelector:".profile__about",avatarSelector:".profile__image"}),oe="61deba0ec5525e755b8d1397";K.getUserInfo().then((function(e){re.setUserInfo(e),re.setAvatar(e.avatar)})),K.getInitialCards().then((function(e){var t=new F({items:e.reverse(),renderer:function(e){var n=new k(Z,Y,"#image-popup"),r=new y(e,e.name,e.link,e.likes.length,"#elements-template",(function(){return n.open(e.name,e.link)}),(function(t){r.handleLike(t)?K.toLike(e._id).then((function(e){var t=e.likes;r.setLikesQuantity(t.length)})):K.toDislike(e._id).then((function(e){var t=e.likes;r.setLikesQuantity(t.length)}))}),(function(e){K.deleteCard(e)})),o=r.generateCard();r.trashCan(oe,e.owner._id),t.addItem(o)}},"#elements-template");t.renderer()}));var ie=new V({input:".popup__container-input",submitButton:".popup__container-button",inactiveButton:".popup__container-button_inactive",inputError:".popup__container-input_type-error",errorClass:".popup__container-error_active"},X),ue=new V({input:".popup__container-input",submitButton:".popup__container-button",inactiveButton:".popup__container-button_inactive",inputError:".popup__container-input_type-error",errorClass:".popup__container-error_active"},W);ie.enableValidation(),ue.enableValidation();var ce=new I((function(e){e.preventDefault(),ce.setLoading();var t=document.querySelector("#name").value,n=document.querySelector("#job").value;K.editProfile(t,n).then((function(){re.setUserInfo(t,n),K.getUserInfo().then((function(e){re.setUserInfo(e),re.getUserInfo()})),ce.setLoading(),ce.close()}))}),"#edit-popup",".popup__container-button"),ae=new I((function(e){e.preventDefault(),ae.setLoading();var t=document.querySelector("#title").value,n=document.querySelector("#image-link").value;K.addCard(t,n).then((function(e){var r=new k(Z,Y,"#image-popup"),o=new y(e,t,n,"0","#elements-template",(function(){return r.open(t,n)}),(function(t){o.handleLike(t)?K.toLike(e._id).then((function(e){var t=e.likes;o.setLikesQuantity(t.length)})):K.toDislike(e._id).then((function(e){var t=e.likes;o.setLikesQuantity(t.length)}))}),(function(e){K.deleteCard(e)}));ae.setLoading(),o.generateCard(),o.trashCan(oe,e.owner._id),ae.close()}))}),"#create-popup",".popup__container-button"),le=new I((function(e){e.preventDefault(),le.setLoading();var t=document.querySelector("#avatar-link").value;K.updateAvatar(t).then((function(){re.setAvatar(t),le.setLoading(),le.close()}))}),"#avatar-popup",".popup__container-button");ce.setEventListeners(),ae.setEventListeners(),le.setEventListeners(),$.addEventListener("click",(function(){ce.open()})),ee.addEventListener("click",(function(){ae.open()})),te.addEventListener("click",(function(){le.open()})),ne.forEach((function(e){e.addEventListener("click",(function(e){e.currentTarget===e.target&&e.currentTarget.classList.remove("popup__opened")}))}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,